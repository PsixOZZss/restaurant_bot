from aiogram import Bot, Router, F
from aiogram.types import Message, CallbackQuery, Contact
from aiogram.filters import CommandStart, CommandObject
from aiogram.fsm.context import FSMContext

from aiogram.types.input_file import FSInputFile


from filters.user_filter import UserFilter
from keyboards.user_keyboard import *
from crud.user_bd import UserDatabase
from states.user_form import UserForm
from utils.send_image import send_img


router = Router()
HOOKAH_COUNT = [str(x) for x in range(3, 51)]
HOUR_COUNT = [str(x) for x in range(3, 51)]
MODERATOR_ID = {
    "Oktyabr": 1218938938,
    "Rassvet": 1218938938,
    "Hamovniki": 1218938938,
    "Sochi": 1218938938,
}
KITCHEN_MENU = [
    "./src/menu/kitchen_0.jpg",
    "./src/menu/kitchen_1.jpg",
    "./src/menu/kitchen_2.jpg",
    "./src/menu/kitchen_3.jpg",
    "./src/menu/kitchen_4.jpg",
    "./src/menu/kitchen_5.jpg",
]
BAR_MENU = [
    "./src/menu/bar_0.jpg",
    "./src/menu/bar_1.jpg",
]
PUFF_MENU = [
    "./src/menu/__puffs--1.jpg",
    "./src/menu/__puffs--2.jpg",
    "./src/menu/__puffs--3.jpg",
    "./src/menu/__puffs--4.jpg",
    "./src/menu/__puffs--5.jpg",
    "./src/menu/__puffs--6.jpg",
    "./src/menu/__puffs--7.jpg",
    "./src/menu/__puffs--8.jpg",
    "./src/menu/__puffs--9.jpg",
    "./src/menu/__puffs--10.jpg",
]


@router.message(CommandStart(), UserFilter())
async def cmd_start(message: Message):
    user_id = message.from_user.id
    UserDatabase().create_user(user_id)

    await send_img(message, ["./src/main_menu/start.png"])
    await message.answer(
        """–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ. –ú–µ–Ω—è –∑–æ–≤—É—Ç –î—ã–º–∑–∞–≤–æ–¥–ë–æ—Ç .

–Ø –ø–æ–º–æ–≥—É –≤–∞–º –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª –∏ —Ä–∞—Å—Å–∫–∞–∂—É –æ –Ω–∞—Å."""
    )
    await message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=start_keyboard())


@router.message(F.text == "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", UserFilter())
async def start_menu_m(message: Message):
    await send_img(message, ["./src/main_menu/start.png"])
    await message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=start_keyboard())


@router.callback_query(F.data == "StartMenu", UserFilter())
async def start_menu_cq(callback_query: CallbackQuery):
    await callback_query.answer()

    await send_img(callback_query.message, ["./src/main_menu/start.png"])
    await callback_query.message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=start_keyboard())


@router.callback_query(F.data == "NoneData", UserFilter())
async def none_data(callback_query: CallbackQuery):
    await callback_query.answer()
    await callback_query.message.answer("–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...")


@router.message(F.contact, UserFilter())
async def get_contact(message: Message):
    contact = message.contact
    user_id = contact.user_id
    UserDatabase().update_user(
        user_id,
        phone_number=contact.phone_number,
        name=contact.first_name,
    )
    await message.answer(f"–í—ã —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–ª–∏—Å—å", reply_markup=start_keyboard())


@router.callback_query(F.data == "Reservation", UserFilter())
async def reservation(callback_query: CallbackQuery):
    await callback_query.answer()
    user_id = callback_query.from_user.id
    phone_number = UserDatabase().read_user(user_id).phone_number
    if phone_number:
        await callback_query.message.answer(
            """–ó–∞–±—Ä–æ–Ω–∏—Ä—É–π—Ç–µ —Å—Ç–æ–ª –¥–ª—è —Å–≤–æ–µ–≥–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è

–§–∏–ª–∏–∞–ª—ã:""",
            reply_markup=reservation_keyboard(),
        )
    else:
        await callback_query.message.answer(
            "–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞",
            reply_markup=auth_keyboard(),
        )


@router.callback_query(F.data == "Menu", UserFilter())
async def menu(callback_query: CallbackQuery):
    await callback_query.answer()
    # await message.answer(f"img")
    await callback_query.message.answer(
        "–ò—Å—Å–ª–µ–¥—É–π—Ç–µ –º–µ–Ω—é, –≥–¥–µ –∫–∞–∂–¥—ã–π –≤–∫—É—Å ‚Äî —ç—Ç–æ –∏—Å–∫—É—Å—Å—Ç–≤–æ, –∞ –ø–æ–¥–∞—á–∞ ‚Äî –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ",
        reply_markup=menu_keyboard(),
    )


@router.callback_query(F.data == "Bar", UserFilter())
async def bar(callback_query: CallbackQuery):
    await callback_query.answer()
    await send_img(callback_query.message, BAR_MENU)
    await callback_query.message.answer(
        """üçπ –ù–∞—à–∞ –±–∞—Ä–Ω–∞—è –∫–∞—Ä—Ç–∞ ‚Äî –∏—Å–∫—É—Å—Å—Ç–≤–æ –º–∏–∫—Å–æ–ª–æ–≥–∏–∏ –≤ –∫–∞–∂–¥–æ–º –±–æ–∫–∞–ª–µ""",
        reply_markup=in_menu_keyboard(),
    )


@router.callback_query(F.data == "Kitchen", UserFilter())
async def kitchen(callback_query: CallbackQuery):
    await callback_query.answer()
    await send_img(callback_query.message, KITCHEN_MENU)
    await callback_query.message.answer(
        """üç¥ –ù–∞—à–µ –º–µ–Ω—é ‚Äî –≤–∞—à –ø—Ä–æ–≤–æ–¥–Ω–∏–∫ –ø–æ –º–∏—Ä—É –≤–∫—É—Å–∞""",
        reply_markup=in_menu_keyboard(),
    )


@router.callback_query(F.data == "Puff", UserFilter())
async def wine_list(callback_query: CallbackQuery):
    await callback_query.answer()
    await send_img(callback_query.message, PUFF_MENU)
    await callback_query.message.answer(
        "üí® SPECIAL PUFF'S ‚Äî –¥—ã–º–Ω—ã–π –∞–∫–∫–æ—Ä–¥ –≤–∞—à–µ–π –≤–µ—á–µ—Ä–∏–Ω–∫–∏",
        reply_markup=in_menu_keyboard(),
    )


@router.callback_query(F.data == "Address", UserFilter())
async def address(callback_query: CallbackQuery):
    await callback_query.answer()
    await callback_query.message.answer(
        """–ù–∞—à–∏ —Ñ–∏–ª–∏–∞–ª—ã –≤ –ú–æ—Å–∫–≤–µ –∏ –°–æ—á–∏:""",
        reply_markup=address_keyboard(),
    )


@router.callback_query(F.data == "Oktyabr", UserFilter())
async def oktyabr(callback_query: CallbackQuery):
    await callback_query.answer()
    await send_img(callback_query.message, ["./src/filials/oktyabr.jpg"])
    await callback_query.message.answer(
        """¬´–ö—Ä–∞—Å–Ω—ã–π –û–∫—Ç—è–±—Ä—å¬ª ‚Äî –∑–µ–ª–µ–Ω—ã–π —É–≥–æ–ª–æ–∫ –≤ —Å–∞–º–æ–º —Å–µ—Ä–¥—Ü–µ —Å—Ç–æ–ª–∏—Ü—ã
¬´–î—ã–º–∑–∞–≤–æ–¥¬ª –Ω–∞ ¬´–ö—Ä–∞—Å–Ω–æ–º –û–∫—Ç—è–±—Ä–µ¬ª ‚Äî –º–µ—Å—Ç–æ –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ —Ü–µ–Ω–∏—Ç –ø—Ä–æ—Å—Ç–æ—Ä –∏ —É—é—Ç –ø–æ–¥ –æ—Ç–∫—Ä—ã—Ç—ã–º –Ω–µ–±–æ–º, —Å –∑–µ–ª—ë–Ω–æ–π –≤–µ—Ä–∞–Ω–¥–æ–π –∏ –ø–∞–Ω–æ—Ä–∞–º–Ω—ã–º –≤–∏–¥–æ–º –Ω–∞ –ú–æ—Å–∫–≤—É —Ä–µ–∫—É, –≥–¥–µ –∫–∞–∂–¥—ã–π –º–æ–º–µ–Ω—Ç –Ω–∞–ø–æ–ª–Ω–µ–Ω –≥–∞—Ä–º–æ–Ω–∏–µ–π.

üè† –û–±—â–∞—è –ø–ª–æ—â–∞–¥—å ‚Äì 2000–º¬≤
üåø –ö—Ä—É–≥–ª–æ–≥–æ–¥–∏—á–Ω–∞—è –≤–µ—Ä–∞–Ω–¥–∞
üìç –ê–¥—Ä–µ—Å: –ë–æ–ª–æ—Ç–Ω–∞—è –Ω–∞–±–µ—Ä–µ–∂–Ω–∞—è, –¥. 3, —Å—Ç—Ä. 2
üìû –¢–µ–ª–µ—Ñ–æ–Ω: 8(499)111-59-29

–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã:
–í—Å-–ß—Ç 12.00 ‚Äî 03.00
–ü—Ç-–°–± 12.00 ‚Äî 05.00""",
        reply_markup=in_address_button(),
    )


@router.callback_query(F.data == "Rassvet", UserFilter())
async def rassvet(callback_query: CallbackQuery):
    await callback_query.answer()
    await send_img(callback_query.message, ["./src/filials/rassvet.jpg"])
    await callback_query.message.answer(
        """¬´–†–∞—Å—Å–≤–µ—Ç¬ª ‚Äî —à–∏–∫–∞—Ä–Ω—ã–π –æ—Ç–¥—ã—Ö –∏ –≥–∞—Å—Ç—Ä–æ—Ä–æ–º–∞–Ω—Ç–∏–∫–∞ –≥–æ—Ä–æ–¥—Å–∫–æ–π –∂–∏–∑–Ω–∏
¬´–î—ã–º–∑–∞–≤–æ–¥¬ª –Ω–∞ –°—Ç–æ–ª—è—Ä–Ω–æ–º –ø–µ—Ä–µ—É–ª–∫–µ ‚Äî —è—Ä–∫–∏–µ –ª–æ–∫–∞—Ü–∏–∏ –¥–ª—è —É–µ–¥–∏–Ω–µ–Ω–Ω—ã—Ö –≤—Å—Ç—Ä–µ—á —Å –¥—Ä—É–∑—å—è–º–∏ –∏ –∂–∏–≤–æ–ø–∏—Å–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π.

üè† –û–±—â–∞—è –ø–ª–æ—â–∞–¥—å ‚Äì 900–º¬≤
üåø –í–µ—Ä–∞–Ω–¥–∞: –æ—Ç–∫—Ä—ã—Ç–∞ —Å –∞–ø—Ä–µ–ª—è –ø–æ –æ–∫—Ç—è–±—Ä—å
üìç –ê–¥—Ä–µ—Å: –°—Ç–æ–ª—è—Ä–Ω—ã–π –ø–µ—Ä–µ—É–ª–æ–∫, 3/14
üìû –¢–µ–ª–µ—Ñ–æ–Ω: 8(499)888-19-99

–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã:
–í—Å-–ß—Ç 12.00 ‚Äî 03.00
–ü—Ç-–°–± 12.00 ‚Äî 05.00
""",
        reply_markup=in_address_button(),
    )


@router.callback_query(F.data == "Hamovniki", UserFilter())
async def hamovniki(callback_query: CallbackQuery):
    await callback_query.answer()
    await send_img(callback_query.message, ["./src/filials/hamovniki.jpg"])
    await callback_query.message.answer(
        """¬´–î—ã–º–∑–∞–≤–æ–¥¬ª –≤ –•–∞–º–æ–≤–Ω–∏–∫–∞—Ö ‚Äî –Ω–æ–≤–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –¥–ª—è —Ü–µ–Ω–∏—Ç–µ–ª–µ–π –≤–∫—É—Å–∞, —É—é—Ç–∞ –∏ —Å—Ç–∏–ª—å–Ω–æ–≥–æ –æ—Ç–¥—ã—Ö–∞
–ó–¥–µ—Å—å –∞–≤—Ç–æ—Ä—Å–∫–∞—è –∫—É—Ö–Ω—è —É–¥–∏–≤–ª—è–µ—Ç —Å–º–µ–ª—ã–º–∏ —Å–æ—á–µ—Ç–∞–Ω–∏—è–º–∏, –≤–∏–Ω–Ω–∞—è –∫–∞—Ä—Ç–∞ —Ä–∞–¥—É–µ—Ç —Ä–µ–¥–∫–∏–º–∏ –Ω–∞—Ö–æ–¥–∫–∞–º–∏, –∞ –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞ –æ–∫—É—Ç—ã–≤–∞–µ—Ç —Å –ø–µ—Ä–≤—ã—Ö –º–∏–Ω—É—Ç

üåø –í–µ—Ä–∞–Ω–¥–∞: –æ—Ç–∫—Ä—ã—Ç–∞ —Å –∞–ø—Ä–µ–ª—è –ø–æ —Å–µ–Ω—Ç—è–±—Ä—å
üìç –ê–¥—Ä–µ—Å: –ö–æ–º—Å–æ–º–æ–ª—å—Å–∫–∏–π –ø—Ä–æ—Å–ø–µ–∫—Ç, 21/10
üìû –¢–µ–ª–µ—Ñ–æ–Ω: 8(499)681-74-19
""",
        reply_markup=in_address_button(),
    )


@router.callback_query(F.data == "Sochi", UserFilter())
async def sochi(callback_query: CallbackQuery):
    await callback_query.answer()
    await send_img(callback_query.message, ["./src/filials/sochi.jpg"])
    await callback_query.message.answer(
        """¬´–î—ã–º–∑–∞–≤–æ–¥¬ª –°–æ—á–∏ ‚Äî —É—é—Ç, –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ –∏ –æ—Å–æ–±–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞
–ò–¥–µ–∞–ª—å–Ω–æ–µ –º–µ—Å—Ç–æ –¥–ª—è —Ç–µ–ø–ª—ã—Ö –≤—Å—Ç—Ä–µ—á, —Å—Ç–∏–ª—å–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –∏ —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏—Ö —É–∂–∏–Ω–æ–≤. –ó–¥–µ—Å—å –≤–æ—Å—Ç–æ—á–Ω—ã–µ –º–æ—Ç–∏–≤—ã –≥–∞—Ä–º–æ–Ω–∏—á–Ω–æ —Å–æ—á–µ—Ç–∞—é—Ç—Å—è —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π —ç—Å—Ç–µ—Ç–∏–∫–æ–π, —Å–æ–∑–¥–∞–≤–∞—è –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –¥–ª—è –Ω–µ–∑–∞–±—ã–≤–∞–µ–º—ã—Ö –º–æ–º–µ–Ω—Ç–æ–≤

–û–±—â–∞—è –ø–ª–æ—â–∞–¥—å ‚Äì 700–º¬≤
üåø –í–µ—Ä–∞–Ω–¥–∞: –æ—Ç–∫—Ä—ã—Ç–∞ —Å –∞–ø—Ä–µ–ª—è –ø–æ –æ–∫—Ç—è–±—Ä—å, 66 –º2
üìç –ê–¥—Ä–µ—Å: —É–ª. –ü—Ä–æ—Å–≤–µ—â–µ–Ω–∏—è, 25, –∫–æ—Ä–ø. 4, –∂–∏–ª–æ–π —Ä–∞–π–æ–Ω –ê–¥–ª–µ—Ä, –°–æ—á–∏.
üìû –¢–µ–ª–µ—Ñ–æ–Ω: 8(499)116-34-21
""",
        reply_markup=in_address_button(),
    )


@router.callback_query(F.data.endswith("_r"), UserFilter())
async def sochi(callback_query: CallbackQuery, bot: Bot):
    await callback_query.answer()

    location = callback_query.data.split("_")[0]
    moderator_id = MODERATOR_ID[f"{location}"]

    user_id = callback_query.from_user.id
    user = UserDatabase().read_user(user_id)

    await bot.send_message(
        chat_id=moderator_id,
        text=f"""–û—Å—Ç–∞–≤–∏–ª–∏ –∑–∞—è–≤–∫—É
–ò–º—è: {user.name}
–ù–æ–º–µ—Ä: {user.phone_number}""",
    )
    await callback_query.message.answer(
        "–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–≤–∏–ª–∏ –∑–∞—è–≤–∫—É, –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è —Å–≤—è–∂–µ–º—Å—è —Å –í–∞–º–∏ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏",
    )
    await callback_query.message.answer(
        "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
        reply_markup=start_keyboard(),
    )


# @router.callback_query(F.data == "Loyalty", UserFilter())
# async def loyalty(callback_query: CallbackQuery):
#     await callback_query.answer()
#     user_id = callback_query.from_user.id
#     phone_number = UserDatabase().read_user(user_id).phone_number
#     if phone_number:
#         pass
#     else:
#         await callback_query.message.answer(
#             "–í–æ–∑–º–æ–∂–Ω–æ, –≤—ã —É–∂–µ —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ –Ω–∞—à–µ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏ Premium Bonus? –î–∞–≤–∞–π—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏–º —ç—Ç–æ. –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤–æ–∏–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞.",
#             reply_markup=loyalty_keyboard(),
#         )

# @router.callback_query(F.data == "CancelReservation", UserFilter())
# async def cancel_reservation(callback_query: CallbackQuery):
#     await callback_query.answer()
#     user_id = callback_query.from_user.id
#     phone_number = UserDatabase().read_user(user_id).phone_number
#     if phone_number:
#         pass
#     else:
#         await callback_query.message.answer(
#             """–î–ª—è –æ—Ç–º–µ–Ω—ã –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º—ã –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏ Munterra –∏–ª–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É +74950013968""",
#             reply_markup=cancel_reservation_keyboard(),
#         )


# @router.callback_query(F.data == "Catering", UserFilter())
# async def catering(callback_query: CallbackQuery):
#     await callback_query.answer()
#     # await message.answer(f"img")
#     await callback_query.message.answer(
#         """–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –ø—Ä–µ–º–∏–∞–ª—å–Ω–æ–≥–æ –∫–∞–ª—å—è–Ω–Ω–æ–≥–æ –∫–µ–π—Ç–µ—Ä–∏–Ω–≥–∞ –Ω–∞ –≤–∞—à–µ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏ –≤ –ú–æ—Å–∫–≤–µ –∏ –ú–æ—Å–∫–æ–≤—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏. –ê–≤—Ç–æ—Ä—Å–∫–∏–µ –ø–æ–∑–∏—Ü–∏–∏ –∏ —Å–µ—Ä–≤–∏—Å Munterra ‚Äî –≤ –æ—Å–æ–±–µ–Ω–Ω—ã–π –¥–µ–Ω—å —Ç–æ–ª—å–∫–æ –¥–ª—è –≤–∞—Å –∏ –≤–∞—à–∏—Ö –≥–æ—Å—Ç–µ–π. –°–æ—Å—Ç–∞–≤–∏–º –º–µ–Ω—é –ø–æ–¥ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –≤–∞—à–µ–≥–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è, —Å–æ–∑–¥–∞–¥–∏–º –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –∑–∞–º–µ–¥–ª–µ–Ω–∏—è –∏ —Ä–µ–ª–∞–∫—Å–∞, –æ—Ä–≥–∞–Ω–∏–∑—É–µ–º —á—ë—Ç–∫–∏–π –∏ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã–π —Å–µ—Ä–≤–∏—Å.""",
#         reply_markup=catering_keyboard(),
#     )


# @router.callback_query(F.data == "Calculator", UserFilter())
# async def calculator(callback_query: CallbackQuery, state: FSMContext):
#     await callback_query.answer()
#     await state.set_state(UserForm.calculator_hookah)
#     # await message.answer(f"img")
#     await callback_query.message.answer(
#         """–°–∫–æ–ª—å–∫–æ –µ–¥–∏–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –∫–∞–ª—å—è–Ω–æ–≤ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞ —Å–≤–æ–µ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏? –û—Ç 3 —à—Ç.""",
#     )


# @router.message(F.text.in_(HOOKAH_COUNT), UserForm.calculator_hookah, UserFilter())
# async def calculator_hookah_t(message: Message, state: FSMContext):
#     await state.set_state(UserForm.calculator_hour)

#     hookah_count = int(message.text)
#     await state.update_data({"hookah_count": hookah_count})

#     await message.answer(
#         "–°–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤ –≤—ã –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –æ—Ç–≤–µ—Å—Ç–∏ –ø–æ–¥ –∫—É—Ä–µ–Ω–∏–µ? –æ—Ç 3-—Ö —á–∞—Å–æ–≤."
#     )


# @router.message(~F.text.in_(HOOKAH_COUNT), UserForm.calculator_hookah, UserFilter())
# async def calculator_hookah_f(message: Message, state: FSMContext):
#     await message.answer("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 3 –¥–æ 50")


# @router.message(F.text.in_(HOUR_COUNT), UserForm.calculator_hour, UserFilter())
# async def calculator_hour_t(message: Message, state: FSMContext):
#     # await state.set_state(UserForm.calculator_hour)

#     data = await state.get_data()
#     hookah_count = int(data["hookah_count"])
#     hour_count = int(message.text)
#     total_count = int(hookah_count * hour_count * 2 / 3)
#     total_price = total_count * 5000
#     await message.answer(
#         f"""–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤–∞—à–µ–≥–æ –∫–µ–π—Ç–µ—Ä–∏–Ω–≥–∞ –ø–æ–ª—É—á–∞–µ—Ç—Å—è {total_price} —Ä—É–±–ª–µ–π, –∑–∞ {total_count} —á–∞—à.
# –†–∞—Å—á–µ—Ç –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω —Å —É—á–µ—Ç–æ–º —Ç–æ–ª—å–∫–æ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏—Ö —á–∞—à. –î–ª—è –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ —Ä–∞—Å—Å—á–µ—Ç–∞ –æ—Å—Ç–∞–≤—å—Ç–µ —Å–≤–æ—é –∑–∞—è–≤–∫—É –∏ –Ω–∞—à —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –∫–∞–ª—å—è–Ω–Ω–æ–π —Å—Ç–∞–Ω—Ü–∏–∏ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏."""
#     )


# @router.message(~F.text.in_(HOUR_COUNT), UserForm.calculator_hour, UserFilter())
# async def calculator_hour_f(message: Message, state: FSMContext):
#     await message.answer("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 3 –¥–æ 50")

# @router.message(F.text == "–£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ", UserFilter())
# async def info(message: Message):
#     user_id = message.from_user.id
#     phone_number = UserDatabase().read_user(user_id).phone_number

#     # await message.answer(f"img")
#     await message.answer(
#         """–ß—Ç–æ–±—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –Ω–∞—à–µ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏, –≤–∞–º –Ω—É–∂–Ω–æ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞.
# –ü—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ 1000  –±–∞–ª–ª–æ–≤ –≤ –ø–æ–¥–∞—Ä–æ–∫, –∞ —Ç–∞–∫–∂–µ 3% –∫—ç—à–±–µ–∫ —Å —Å—É–º–º—ã –∫–∞–∂–¥–æ–≥–æ —á–µ–∫–∞!"""
#     )
#     await message.answer(
#         """–ü—Ä–æ—Ü–µ–Ω—Ç –∫—ç—à–±–µ–∫–∞ –±—É–¥–µ—Ç –ø–æ–≤—ã—à–∞—Ç—å—Å—è —Å —É—á–µ—Ç–æ–º –ø–æ—Ç—Ä–∞—á–µ–Ω–Ω–æ–π —Å—É–º–º—ã. Munterra –≤—Å–µ–≥–¥–∞ –∂–¥—ë—Ç –≤–∞—Å.
# –í –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Munterra –º–æ–∂–Ω–æ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–º–∏ —Ç–æ–≤–∞—Ä–∞–º–∏ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º–∏, –∫–æ—Ç–æ—Ä—ã–º–∏ –º–æ–∂–Ω–æ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤ –æ–±–º–µ–Ω –Ω–∞ –±–∞–ª–ª—ã –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏."""
#     )
#     if phone_number:
#         pass
#     else:
#         await message.answer(
#             "–í–æ–∑–º–æ–∂–Ω–æ, –≤—ã —É–∂–µ —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ –Ω–∞—à–µ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏ Premium Bonus? –î–∞–≤–∞–π—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏–º —ç—Ç–æ. –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤–æ–∏–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞.",
#             reply_markup=loyalty_keyboard(),
#         )
